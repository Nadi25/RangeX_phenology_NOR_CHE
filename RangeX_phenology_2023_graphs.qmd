---
title: "RangeX_phenology_2023_#buds_flowers_infructescences"
author: "Nadine Arzt"
format: html
editor: visual
message: false
---

### 

## RangeX phenology 2023 plot buds, flowers, infructescences

### Library

```{r}
library(tidyverse)
library(conflicted)
library(RColorBrewer)
library(viridis)
library(ggpubr)


conflict_prefer_all("dplyr", quiet = TRUE)

## set theme for poster with bigger font size
theme_set(theme_bw(base_size = 20))
```

### Import data set by sourcing the quarto file for cleaning

```{r}
#' @param file path to a quarto or Rmarkdown file
source_qmd <- function(file){
  tmp <- tempfile()
  knitr::purl(input = file, output = tmp)
  source(tmp)
}


source_qmd("RangeX_phenology_2023_data_cleaning.qmd")
```

### Filter buds, flowers, infructescences

```{r}
## don't use seeds_collected
phenology_clean <- rangex_phenology_clean_long |> 
    filter(rangex_phenology_clean_long$Stage != "seeds_collected")
```

### Calculate median and quantiles

```{r}
## calculate median of number of buds, flowers, infructescences
## calculate quantiles (fits to median) instead of sd to avoid having negative values for mean-/+ sd. 
## Negative ranges come when we have many low values and a few high ones
phenology_clean_median_quant <- phenology_clean |> 
  group_by(species, date, treatment, Stage) |> 
  summarise(median = median(value),
    lo = quantile(value, probs = 0.1, na.rm = TRUE), 
    hi = quantile(value, probs = 0.9, na.rm = TRUE), 
    .groups = "drop")
```

### Rename treatment and Stages

```{r}
## call number_buds buds ...
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  mutate(Stage = case_when(
    Stage == "number_buds" ~ "buds",
    Stage == "number_flowers" ~ "flowers",
    Stage == "number_infructescences" ~ "infructescences",
    TRUE ~ as.character(Stage)  # Keep other values as they are
  ))

## split column treatment
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  separate(treatment, c("site", "temperature", "competition"))

## rename site
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  mutate(site = case_when(
    site == "lo" ~ "low",
    site == "hi" ~ "high",
    TRUE ~ as.character(Stage)  # Keep other values as they are
  ))

## rename vege = with competition
## rename bare = without competition
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  mutate(competition = case_when(
    competition == "vege" ~ "with competition",
    competition == "bare" ~ "without competition",
    TRUE ~ as.character(Stage)  # Keep other values as they are
  ))

## rename temperature
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  mutate(temperature = case_when(
    temperature == "ambi" ~ "ambient",
    temperature == "warm" ~ "warmed",
    TRUE ~ as.character(Stage)  # Keep other values as they are
  ))

## combine temperature and competition
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  unite(site_treatment, site, temperature, sep = " ", remove = FALSE)

```

### Rename species names

```{r}
phenology_clean_median_quant <- phenology_clean_median_quant |> 
  mutate(species = case_when(
    species == "cennig" ~ "Centaurea nigra",
    species == "cyncri" ~ "Cynosurus cristatus",
    species == "hypmac" ~ "Hypericum maculatum",
    species == "leuvul" ~ "Leucanthemum vulgare",
    species == "luzmul" ~ "Luzula multiflora",
    species == "pimsax" ~ "Pimpinella saxifraga",
    species == "plalan" ~ "Plantago lanceolata",
    species == "sildio" ~ "Silene dioica",
    species == "sucpra" ~ "Succisa pratensis",
    species == "tripra" ~ "Trifolium pratense",
    TRUE ~ as.character(species)
  ))
```

### First plot with flowers of all species

```{r}
## filter only flowers
phenology_clean_median_quant_flowers <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$Stage == "flowers")

## filter only high site
# phenology_clean_median_quant_flowers_hi <- phenology_clean_median_quant_flowers |> 
#   filter(phenology_clean_median_quant_flowers$site == "high")

## combine temperature and competition
phenology_clean_median_quant_flowers <- phenology_clean_median_quant_flowers |> 
  unite(treatment, site_treatment, competition, sep = " ", remove = FALSE)


ggplot(phenology_clean_median_quant_flowers, aes(x = date)) +
  geom_line(aes(y = median, color = treatment)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = treatment), linewidth = 2, alpha = 0.4) +
  facet_wrap(vars(species)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "") +
  scale_color_manual(values = c("darkblue", "darkred", "darkorange", "grey", "green", "yellow")) +
  scale_fill_manual(values = c("darkblue", "darkred", "darkorange", "grey", "green", "yellow")) +
  theme(legend.position = "top")
```

Problem with cynci hi 7a f9 –\> was g9 in metadata file –\> needs to be changed in google docs

#### Plot points and connect

```{r}
flowers_colors <- brewer.pal(6, "Set2")

## plot median of flower number for all species and all treatments
ggplot(data = phenology_clean_median_quant_flowers, aes(date, color = treatment))+
  geom_point(aes(y = median, color = treatment), size = 3)+
  geom_line(aes(y = median, color = treatment))+
  facet_wrap(vars(species), nrow = 2, ncol = 5)+
  labs(y = "Median", x = "", title = "") +
  theme(legend.position = "top")+
  scale_color_manual(values = flowers_colors)
```

#### Play with colors

```{r}
# Convert site_treatment to a factor with correct order
phenology_clean_median_quant_flowers$treatment <- factor(
  phenology_clean_median_quant_flowers$treatment,
  levels = c("high warmed with competition", "high ambient with competition", "high warmed without competition", "high ambient without competition", "low ambient with competition", "low ambient without competition")
)

## plot median of flower number for all species and all treatments
ggplot(data = phenology_clean_median_quant_flowers, aes(date, color = treatment))+
  geom_point(aes(y = median, color = treatment), size = 3)+
  geom_line(aes(y = median, color = treatment))+
  facet_wrap(vars(species), nrow = 2, ncol = 5)+
  labs(y = "Median", x = "", title = "") +
  theme(legend.position = "top")+
  scale_color_manual(values = c("darkred", "darkblue", "red", "turquoise", "grey32", "grey"))
```

```{r}
ggplot(data = phenology_clean_median_quant_flowers, aes(date, color = treatment))+
  geom_point(aes(y = median, color = treatment), size = 3)+
  geom_line(aes(y = median, color = treatment))+
  facet_wrap(vars(species), nrow = 2, ncol = 5)+
  labs(y = "Median", x = "", title = "") +
  theme(legend.position = "top")+
  scale_color_manual(values = c("#A50021", "#2400D8", "#DE40AA", "#33FFFF", "grey23", "grey"))
```

### Plot median flower numbers all species

```{r}
All_species_flowers <- ggplot(data = phenology_clean_median_quant_flowers, aes(date, color = treatment))+
  geom_point(aes(y = median, color = treatment), size = 3)+
  geom_line(aes(y = median, color = treatment))+
  facet_wrap(vars(species), nrow = 2, ncol = 5)+
  labs(y = "Median number of flowers", x = "", title = "") +
  theme(legend.position = "top")+
  scale_color_manual(values = c("#A50021", "#2482A1", "#F48400", "#33FFFF", "#606060", "#C0C0C0"), name = "Treatment")
All_species_flowers

ggsave(filename = "Output/All_species_flowers.png", plot = All_species_flowers, width = 15, height = 8, units = "in")

ggsave(filename = "Output/All_species_flowers_2.png", plot = All_species_flowers, width = 15, height = 10, units = "in")
```

#### Reorder species by flowering start

```{r}
# Define the order of species based on when they start to flower
species_order <- c("Plantago lanceolata", "Silene dioica", "Leucanthemum vulgare", "Trifolium pratense", "Luzula multiflora", "Pimpinella saxifraga", "Cynosurus cristatus", "Succisa pratensis", "Hypericum maculatum", "Centaurea nigra")  # Add your species names in the desired order

# Convert "species" to a factor with the specified order
phenology_clean_median_quant_flowers$species <- factor(phenology_clean_median_quant_flowers$species, levels = species_order)

All_species_flowers_2 <- ggplot(data = phenology_clean_median_quant_flowers, aes(date, color = treatment))+
  geom_point(aes(y = median, color = treatment), size = 3)+
  geom_line(aes(y = median, color = treatment))+
  facet_wrap(vars(species), nrow = 2, ncol = 5)+
  labs(y = "Median number of flowers", x = "", title = "") +
  theme(legend.position = "top")+
  scale_color_manual(values = c("#A50021", "#2482A1", "#F48400", "#33FFFF", "#606060", "#C0C0C0"), name = "Treatment")
All_species_flowers_2

ggsave(filename = "Output/All_species_flowers_3.png", plot = All_species_flowers_2, width = 15, height = 10, units = "in")
```

### Make two groups of species

#### Plalan, Leuvul, Tripra, Sucpra, Cennig

```{r}
species_group_1 <- phenology_clean_median_quant_flowers |> 
  filter(phenology_clean_median_quant_flowers$species %in% c("Plantago lanceolata", "Leucanthemum vulgare", "Trifolium pratense", "Succisa pratensis", "Centaurea nigra"))

Species_group_1 <- ggplot(data = species_group_1, aes(date, color = treatment))+
  geom_point(aes(y = median, color = treatment), size = 3)+
  geom_line(aes(y = median, color = treatment))+
  facet_wrap(vars(species), nrow = 2, ncol = 5)+
  labs(y = "Median number of flowers", x = "", title = "") +
  theme(legend.position = "top",
        axis.text.x = element_blank(),   # Remove x-axis text
        axis.ticks.x = element_blank(),  # Remove x-axis ticks
        panel.grid.minor.x = element_blank(),  # Remove vertical minor grid lines
        panel.grid.major.y = element_line(color = "gray", linewidth = 0.5),  # Adjust horizontal grid lines
        panel.grid.minor.y = element_blank()  # Remove horizontal minor grid lines
  ) +
  scale_color_manual(values = c("#A50021", "#2482A1", "#F48400", "#33FFFF", "#606060", "#C0C0C0"), name = "Treatment")
Species_group_1

ggsave(filename = "Output/Species_group_1.png", plot = Species_group_1, width = 15, height = 6, units = "in")
```

#### Sildio, Luzmul, Pimsax, Cyncri, Hypmac,

```{r}
species_group_2 <- phenology_clean_median_quant_flowers |> 
  filter(phenology_clean_median_quant_flowers$species %in% c("Silene dioica", "Luzula multiflora", "Pimpinella saxifraga", "Cynosurus cristatus", "Hypericum maculatum"))

Species_group_2 <- ggplot(data = species_group_2, aes(date, color = treatment)) +
  geom_point(aes(y = median, color = treatment), size = 3) +
  geom_line(aes(y = median, color = treatment)) +
  facet_wrap(vars(species), nrow = 2, ncol = 5) +
  labs(y = "Median number of flowers", x = "", title = "") +
  theme(legend.position = "top",
        panel.grid.minor.x = element_blank(),  # Remove vertical minor grid lines
        panel.grid.major.y = element_line(color = "gray", linewidth = 0.5),  # Adjust horizontal grid lines
        panel.grid.minor.y = element_blank()  # Remove horizontal minor grid lines
  ) +
  scale_color_manual(values = c("#A50021", "#2482A1", "#F48400", "#33FFFF", "#606060", "#C0C0C0"), name = "Treatment")
Species_group_2
#
ggsave(filename = "Output/Species_group_2.png", plot = Species_group_2, width = 15, height = 6, units = "in")
```

### Filter per species

### Subset of Plantago

```{r}
## filter only plalan
phenology_clean_median_quant_plalan <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Plantago lanceolata")

```

##### Plot

```{r}
# Convert site_treatment to a factor with correct order
phenology_clean_median_quant_plalan$site_treatment <- factor(
  phenology_clean_median_quant_plalan$site_treatment,
  levels = c("high warmed", "high ambient", "low ambient")
)

ggplot(phenology_clean_median_quant_plalan, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.4) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Plantago lanceolata") +
  scale_color_manual(values = c("darkblue", "darkred", "darkorange")) +
  scale_fill_manual(values = c("darkblue", "darkred", "darkorange")) +
  theme(legend.position = "top")
```

#### Plot Plantago buds, flowers, infructescences

```{r}
ggplot(phenology_clean_median_quant_plalan, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Plantago lanceolata") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Centaurea

Be aware that this is a calculated number for b, f and i using the peak no of flowers –\> no flowers per stem –\> getting no flowers by calculating no stems (original in no flowers) \* mean no flowers for each individual

But: this was just calculated for flowers, not buds or infructescences

```{r}
## filter only Centaurea nigra
phenology_clean_median_quant_cennig <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Centaurea nigra")
```

#### Plot Centaurea buds, flowers, infructescences

```{r}
ggplot(phenology_clean_median_quant_cennig, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Centaurea nigra") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Cynosurus

```{r}
## filter only Cynosurus cristatus
phenology_clean_median_quant_cyncri <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Cynosurus cristatus")
```

#### Plot Cynosurus buds, flowers, infructescences

```{r}
ggplot(phenology_clean_median_quant_cyncri, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Cynosurus cristatus") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Hypericum maculatum

```{r}
## filter only Hypericum maculatum
phenology_clean_median_quant_hypmac <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Hypericum maculatum")
```

#### Plot Hypericum buds, flowers, infructescences

```{r}
ggplot(phenology_clean_median_quant_hypmac, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Hypericum maculatum") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Leucanthemum

```{r}
## filter only Leucanthemum vulgare
phenology_clean_median_quant_leuvul <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Leucanthemum vulgare")
```

#### Plot Leucanthemum buds, flowers, infructescences

```{r}
Leucanthemum <- ggplot(phenology_clean_median_quant_leuvul, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Leucanthemum vulgare") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF"))+
  theme(legend.position = "top",
        panel.grid.minor.x = element_blank(),  # Remove vertical minor grid lines
        panel.grid.major.y = element_line(color = "gray", linewidth = 0.5),  # Adjust horizontal grid lines
        panel.grid.minor.y = element_blank()  # Remove horizontal minor grid lines
  )
Leucanthemum

ggsave(filename = "Output/Leucanthemum_buds_flowers_infructescences.png", plot = Leucanthemum, width = 15, height = 10, units = "in")

ggsave(filename = "Output/Leucanthemum_buds_flowers_infructescences_2.png", plot = Leucanthemum, width = 8, height = 10, units = "in")
```

### Subset of Luzula

```{r}
## filter only Luzula multiflora
phenology_clean_median_quant_luzmul <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Luzula multiflora")
```

#### Plot Luzula buds, flowers, infructescences

```{r}
ggplot(phenology_clean_median_quant_luzmul, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Luzula multiflora") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Pimpinella

```{r}
## filter only Pimpinella saxifraga
phenology_clean_median_quant_pimsax <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Pimpinella saxifraga")
```

#### Plot Pimpinella

```{r}
ggplot(phenology_clean_median_quant_pimsax, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Pimpinella saxifraga") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Silene

```{r}
## filter only Silene dioica
phenology_clean_median_quant_sildio <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Silene dioica")
```

#### Plot Silene

```{r}
ggplot(phenology_clean_median_quant_sildio, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Silene dioica") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Succisa

```{r}
## filter only Succisa pratensis
phenology_clean_median_quant_sucpra <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Succisa pratensis")
```

#### Plot Succisa

```{r}
ggplot(phenology_clean_median_quant_sucpra, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Succisa pratensis") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")
```

### Subset of Trifolium

```{r}
## filter only Trifolium pratense
phenology_clean_median_quant_tripra <- phenology_clean_median_quant |> 
  filter(phenology_clean_median_quant$species == "Trifolium pratense")
```

#### Plot Trifolium

```{r}
ggplot(phenology_clean_median_quant_tripra, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Trifolium pratense") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  theme(legend.position = "top")

Trifolium <- ggplot(phenology_clean_median_quant_tripra, aes(x = date)) +
  geom_line(aes(y = median, color = Stage)) +
  geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), linewidth = 2, alpha = 0.5) +
  facet_grid(rows = vars(site_treatment), cols = vars(competition)) +  # Added `scales = "free"`
  labs(y = "Median +/- quantiles", x = "", title = "Trifolium pratense") +
  scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
  scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF"))+
  theme(legend.position = "top",
        panel.grid.minor.x = element_blank(),  # Remove vertical minor grid lines
        panel.grid.major.y = element_line(color = "gray", linewidth = 0.5),  # Adjust horizontal grid lines
        panel.grid.minor.y = element_blank()  # Remove horizontal minor grid lines
  )
Trifolium

ggsave(filename = "Output/Trifolium_buds_flowers_infructescences_2.png", plot = Trifolium, width = 10, height = 8, units = "in")
```

Trifolium performes better at high site and doesn't care about competition.

### Make pdf with all species and all stages

```{r}
# species list for NOR
species_list_nor <- unique(phenology_clean_median_quant$species)

# make plots for all species
plots_nor <- map(species_list_nor, ~ {
  dat <- filter(phenology_clean_median_quant, species == .x)
  
  ggplot(dat, aes(x = date)) +
    geom_line(aes(y = median, color = Stage)) +
    geom_ribbon(aes(y = median, ymin = lo, ymax = hi, fill = Stage), 
                linewidth = 2, alpha = 0.5) +
    facet_grid(rows = vars(site_treatment), cols = vars(competition)) +
    labs(y = "Median +/- quantiles", x = "", title = .x) +
    scale_color_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
    scale_fill_manual(values = c("#00BB00FF", "#500050FF", "#FFBBFFFF")) +
    theme(
      legend.position = "top",
      panel.grid.minor.x = element_blank(),
      panel.grid.major.y = element_line(color = "gray", linewidth = 0.5),
      panel.grid.minor.y = element_blank()
    )
})

```

#### One pdf per species

```{r}
# saves a pdf per species

walk2(plots_nor, species_list_nor, ~ ggsave(
  filename = paste0("Output/NOR_species_", .y, ".pdf"),
  plot = .x,
  width = 10, height = 8
))

```

#### All species in one pdf

```{r}
ggexport(
  plotlist = plots_nor,
  filename = "Output/NOR_all_species_phenology.pdf",
  width = 10, height = 8
)
```
